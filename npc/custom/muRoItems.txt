//===== rAthena Script =======================================
//= EnemyArea's Quest Shop
//===== By: ==================================================
//= EnemyArea
//===== Current Version: =====================================
//= 1
//===== Compatible With: =====================================
//= rAthena SVN r15340+
//===== Description: =========================================
//= https://wiki.muhro.eu/Equipment_Crafting
//============================================================
					
prontera,164,168,5	script	Crafting Items	59,{

function Add; function Chk; function Slot; function A_An;

	if(.Shops$ != "") set .@i,1;
	else {
		set .@menu$,"";
		for(set .@i,1; .@i<=getarraysize(.Shops$); set .@i,.@i+1)
			set .@menu$, .@menu$+.Shops$[.@i]+":";
		set .@i, select(.@menu$); }
	dispbottom "Select one item at a time.";
	callshop "equipmentcrafter"+.@i,1;
	npcshopattach "equipmentcrafter"+.@i;
	end;

function Add {
	if (getitemname(getarg(1))=="null") {
		debugmes "Quest reward #"+getarg(1)+" invalid (skipped)."; return; }
	for(set .@n,5; .@n<127; set .@n,.@n+2) {
		if (!getarg(.@n,0)) break;
		if (getitemname(getarg(.@n))=="null") {
			debugmes "Quest requirement #"+getarg(.@n)+" invalid (skipped) on Quest ItemID "+ getarg(1) +"."; return; } }
	for(set .@i,2; .@i<.@n; set .@i,.@i+1)
		set getd(".q_"+getarg(1)+"["+(.@i-2)+"]"), getarg(.@i);
	npcshopadditem "equipmentcrafter"+getarg(0),getarg(1),((.ShowZeny)?getarg(3):0);
	return; }
function Chk {
	if (getarg(0)<getarg(1)) { set @qe0,1; return "^FF0000"; }
	else return "^00FF00"; }
function Slot {
	set .@s$,getitemname(getarg(0));
	switch(.ShowSlot){
		case 1: if (!getitemslots(getarg(0))) return .@s$;
		case 2: if (getiteminfo(getarg(0),11)>0) return .@s$+" ["+getitemslots(getarg(0))+"]";
		default: return .@s$; } }
function A_An {
	setarray .@A$[0],"a","e","i","o","u";
	set .@B$, "_"+getarg(0);
	for(set .@i,0; .@i<5; set .@i,.@i+1)
		if (compare(.@B$,"_"+.@A$[.@i])) return "an "+getarg(0);
	return "a "+getarg(0); }

OnBuyItem:
	set .@q[0],@bought_nameid;
	copyarray .@q[1],getd(".q_"+@bought_nameid+"[0]"),getarraysize(getd(".q_"+@bought_nameid+"[0]"));
	if (!.@q[1]) { message strcharinfo(0),"An error has occurred."; end; }
	mes "[Quest Shop]";
	mes "Reward: ^0055FF"+((.@q[1]>1)?.@q[1]+"x ":"")+Slot(.@q[0])+"^000000";
	mes "Requirements:";
	if (.@q[2]) mes " > "+Chk(Zeny,.@q[2])+.@q[2]+" Zeny^000000";
	if (.@q[3]) mes " > "+Chk(getd(.Points$[0]),.@q[3])+.@q[3]+" "+.Points$[1]+" ("+getd(.Points$[0])+"/"+.@q[3]+")^000000";
	if (.@q[4]) for(set .@i,4; .@i<getarraysize(.@q); set .@i,.@i+2)
		mes " > "+Chk(countitem(.@q[.@i]),.@q[.@i+1])+((.DisplayID)?"{"+.@q[.@i]+"} ":"")+Slot(.@q[.@i])+" ("+countitem(.@q[.@i])+"/"+.@q[.@i+1]+")^000000";
	next;
	set @qe1, getiteminfo(.@q[0],5); set @qe2, getiteminfo(.@q[0],11);
	addtimer 1000, strnpcinfo(1)+"::OnEnd";
	while(1){
		switch(select(" ~ Purchase ^0055FF"+getitemname(.@q[0])+"^000000:"+((((@qe1&1) || (@qe1&256) || (@qe1&512)) && @qe2>0 && !@qe6)?" ~ Preview...":"")+": ~ ^777777Cancel^000000")) {
			case 1:
				if (@qe0) { 
					mes "[Quest Shop]";
					mes "You're missing one or more quest requirements.";
					close; }
				if (!checkweight(.@q[0],.@q[1])) {
					mes "[Quest Shop]";
					mes "^FF0000You need "+(((.@q[1]*getiteminfo(.@q[0],6))+Weight-MaxWeight)/10)+" additional weight capacity to complete this trade.^000000";
					close; }
				if (.@q[2]) set Zeny, Zeny-.@q[2];
				if (.@q[3]) setd .Points$[0], getd(.Points$[0])-.@q[3];
				if (.@q[4]) for(set .@i,4; .@i<getarraysize(.@q); set .@i,.@i+2)
					delitem .@q[.@i],.@q[.@i+1];
				getitem .@q[0],.@q[1];
				if (.Announce) announce strcharinfo(0)+" has created "+A_An(getitemname(.@q[0]))+"!",0;
				specialeffect2 699;
				close;
			case 2:
				set @qe3, getlook(3); set @qe4, getlook(4); set @qe5, getlook(5);
				if (@qe1&1) atcommand "@changelook 3 "+@qe2;
				if (@qe1&256) atcommand "@changelook 1 "+@qe2;
				if (@qe1&512) atcommand "@changelook 2 "+@qe2;
				set @qe6,1;
				break;
			case 3:
				close; } }
OnEnd:
	if (@qe6) { atcommand "@changelook 3 "+@qe3; atcommand "@changelook 1 "+@qe4; atcommand "@changelook 2 "+@qe5; }
	for(set .@i,0; .@i<7; set .@i,.@i+1) setd "@qe"+.@i,0;
	end;
OnInit:
// --------------------- Config ---------------------
// Custom points, if needed: "<variable>","<name to display>"
	setarray .Points$[0],"#CASHPOINTS","Cash Points";

	set .Announce,1;	// Announce quest completion? (1: yes / 0: no)
	set .ShowSlot,1;	// Show item slots? (2: all equipment / 1: if slots > 0 / 0: never)
	set .DisplayID,0;	// Show item IDs? (1: yes / 0: no)
	set .ShowZeny,0;	// Show Zeny cost, if any? (1: yes / 0: no)

// Shop categories, if needed: "<Shop 1>","<Shop 2>"{,...};
// Duplicate dummy data for any additional shops (bottom of script).
// If no categories, use the second line instead (remove //).

	setarray .Shops$[1],"Hat Maker Quest Items";
	// set .Shops$,"n/a";

// Add(<shop number>,<reward ID>,<reward amount>,<Zeny cost>,<point cost>,
//     <required item ID>,<required item amount>{,...});
// Shop number corresponds with order above (default is 1).
// Note: Do NOT use a reward item more than once!
Add(1,5103,1,0,0,2253,50);
Add(1,5901,1,0,0,2221,1,975,1,981,3,7038,50,7200,10);
Add(1,18791,1,0,0,2244,1,975,3,7200,10,7444,3,1059,50);
Add(1,5283,1,0,0,7004,50,7264,50,7043,50,5015,30,10012,30);
Add(1,18537,1,0,0,2221,1,975,1,976,3,508,50,7200,10);
Add(1,18892,1,0,0,6216,70,7094,100,7317,250,7095,50,5035,1);
Add(1,18895,1,0,0,994,15,716,1000,7097,200,7511,200,1636,1);
Add(1,18897,1,0,0,717,1000,978,20,19344,1,995,15,720,20);
Add(1,18908,1,0,0,507,100,660,1,2244,1,2700,2,748,250);
Add(1,18917,1,0,0,950,200,994,10,5041,1,6215,200,7322,200);
Add(1,2349,1,0,0,992,40,996,15,1036,300,2348,1,4390,1);
Add(1,5520,1,0,0,622,3,914,200,2210,1,705,200,515,100);
Add(1,15008,1,0,0,990,20,7096,150,1036,300,1231,1,2345,1);
Add(1,5006,1,0,0,2201,1,983,15,1001137,50,2747,1,6245,100);
Add(1,5396,1,0,0,724,50,969,7,7752,200,7442,50,4038,1);
Add(1,5594,1,0,0,633,10,530,150,529,100,539,50,4206,1);
Add(1,450217,1,0,0,7019,30,25731,250);
Add(1,18666,1,0,0,4230,1,954,250,1117,1,7938,50,2618,1);
Add(1,18659,1,0,0,1377,1,1471,1,7444,5,7798,100,7222,50);
Add(1,15041,1,0,0,1422,1,1471,1,607,5,7798,100,7327,50);
Add(1,400109,1,0,0,25731,250,1001037,30);
Add(1,28440,1,0,0,960,100,965,100,726,5,7053,20,4153,1);
Add(1,28439,1,0,0,7065,100,964,100,1001,5,6264,20,4326,1);
Add(1,5611,1,0,0,967,100,2221,1);
Add(1,5422,1,0,0,1097,100,7117,10,1019,30,7015,100,1557,2);
Add(1,5659,1,0,0,997,100,7124,100,7004,100,993,50,4228,1);
Add(1,5660,1,0,0,7048,20,7063,300,1498,5,996,100,4163,1);
Add(1,18541,1,0,0,2210,1,25266,100,7200,10,7939,50,604,40);
Add(1,18599,1,0,0,4174,1,2255,1,1039,300,7568,150,7563,50);
Add(1,18607,1,0,0,6214,50,12040,20,7216,300,4253,1,2148,1);
Add(1,18620,1,0,0,7319,100,7097,200,990,50,660,2,633,2);

sleep 10;

Add(1,18639,1,0,0,1059,400,2221,1,7205,200,6253,200,978,100);
Add(1,18641,1,0,0,7293,20,5045,1,7439,200,7163,600,1001,70);
Add(1,18645,1,0,0,7065,300,7262,100,7218,200,982,20,1023,100);
Add(1,5498,1,0,0,2248,1,920,350,7036,1,6020,50,7938,10);
Add(1,5944,1,0,0,2502,1,7357,50,721,5,7436,5,2298,1);
Add(1,410079,1,5000000,0,2995,1,2996,1,16033,1,7446,500,7356,50);
Add(1,480124,1,1000000,0,725,5,27014,3);
Add(1,480125,1,1000000,0,727,5,27015,3);
Add(1,480197,1,1000000,0,724,5,27016,3);

Add(1,450405,1,1000000,0,6750,50,6962,50,27012,1);
Add(1,450406,1,1000000,0,6750,50,6962,50,27013,1);
Add(1,450407,1,1000000,0,6750,50,6962,50,27018,1,27017,1);

Add(1,5305,1,0,0,7208,250,7023,30,7095,20,7189,10,13038,1);
Add(1,5307,1,0,0,576,100,634,20,7510,20,514,10,2211,1);
Add(1,5364,1,0,0,7169,100,5012,1,7166,300,2718,1,7019,50);
Add(1,5548,1,0,0,748,200,905,200,1033,100,2270,1,4257,1);
Add(1,5574,1,0,0,1019,100,662,50,7203,20,1003,20,976,5);
Add(1,5664,1,0,0,951,300,5014,1,995,50,702,50,605,10);
Add(1,5675,1,0,0,25257,300,716,200,7013,150,1059,100,4001,1);
Add(1,5778,1,0,0,7441,200,6073,200,7326,200,925,200,510,100);
Add(1,5788,1,0,0,2201,1,747,100,7053,150,7054,150,7321,150);
Add(1,18521,1,0,0,5120,1,5037,3,1051,200,7291,50,7107,200);
Add(1,18661,1,0,0,1723,1,7157,200,911,200,908,200,7209,200);
Add(1,18663,1,0,0,2251,1,7296,50,6020,500,7171,500,2276,1);
Add(1,18664,1,0,0,2291,2,904,200,25809,100,4343,1,1018,500);
Add(1,18665,1,0,0,582,100,620,100,502,100,7358,50,25811,100);
Add(1,18667,1,0,0,19963,1,6091,50,709,50,7213,200,6021,200);
Add(1,18670,1,0,0,7038,200,7751,100,1025,500,5113,1,1059,100);
Add(1,18671,1,0,0,6321,350,6324,350,2262,3,919,500,6022,10);
Add(1,18673,1,0,0,2282,1,25767,200,7063,500,1009,1,2325,1);

sleep 10;

Add(1,18676,1,0,0,7316,200,928,200,1014,20,6324,100,2203,1);
Add(1,18856,1,0,0,1029,1,7267,30,753,1,7213,75,1025,250);
Add(1,18882,1,0,0,4001,1,4033,1,4196,1,7134,500,741,10);
Add(1,5208,1,0,0,1555,1,1556,1,7015,200);
Add(1,18754,1,0,0,7266,100,1053,50,7200,10,983,3,6719,3);
Add(1,400011,1,0,0,983,10,27170,3,27171,3,25278,300,5170,1);
Add(1,19267,1,0,0,25283,100,702,50,6394,50,969,5,7438,10);
Add(1,19266,1,0,0,6246,25,7435,50,1060,50,714,3,7437,10);
Add(1,18563,1,0,0,950,100,2746,1,2244,1,731,5,5125,1);
Add(1,19244,1,0,0,2626,1,7327,50,2603,1,1008,3,1007,3);
Add(1,19157,1,0,0,32013,1,28116,1,7317,100,7093,5,7054,20);
Add(1,19135,1,0,0,610006,1,4373,5,9030,1,5978,1,23189,100);
Add(1,5388,1,0,0,993,50,7226,50,937,50,954,100,926,100);
Add(1,5511,1,0,0,905,50,521,50,7445,50,979,3,7436,50);
Add(1,18850,1,0,0,948,200,25616,50,7188,50,2221,1,4281,1);
Add(1,5206,1,0,0,712,200,2027,1,629,50,979,3,7038,10);
Add(1,5411,1,0,0,982,10,7226,50,937,50,954,100,926,100);
Add(1,5905,1,0,0,2221,1,975,2,983,2,1059,50,7200,10);
Add(1,18795,1,0,0,5172,1,2254,1,981,3,978,1,7200,30);
Add(1,5898,1,0,0,2210,1,25262,1,7444,3,7448,50,7934,1);
Add(1,5654,1,0,0,668,20,7063,100,718,50,2743,1,20288,1);
Add(1,2573,1,0,0,6383,100,7038,50,2254,1,2282,1,7063,100);
Add(1,19031,1,0,0,6245,100,7206,50,2254,1,2282,1,6395,50);
Add(1,5936,1,0,0,734,100,747,50,1000,20,1009,5,2505,1);
Add(1,5592,1,0,0,2890,1,7063,100,916,50,7446,50,7293,10);
Add(1,5897,1,0,0,12365,5,6510,20,2235,1,2249,1,714,3);
Add(1,2576,1,0,0,2502,1,2504,1,2506,1,985,10,984,10);
Add(1,2589,1,0,0,2254,1,2255,1,983,5,916,50,7038,50);
Add(1,19249,1,0,0,975,10,2282,1,7447,50,7448,50,7445,50);
Add(1,18793,1,0,0,2244,1,982,3,714,1,7038,50,1059,50);

sleep 10;

Add(1,18794,1,0,0,2221,1,2244,1,714,1,981,2,982,1);
Add(1,5903,1,0,0,2282,1,975,1,982,1,978,1,1059,50);
Add(1,18559,1,0,0,983,5,1020,100,6245,50,6691,50,7205,100,7153,20);
Add(1,18560,1,0,0,983,5,6405,20,6393,50,7205,100,7166,50,1059,100);
Add(1,5205,1,0,0,12573,50,729,50,979,5,993,100,2298,1);
Add(1,470033,1,0,0,4443,3,300116,3,2680,1,2424,1,2372,1);
Add(1,5593,1,0,0,2214,1,9004,1,4006,1,515,250,622,15);
Add(1,5527,1,0,0,2250,1,2718,1,4663,1,705,250,949,250);
Add(1,5502,1,0,0,1624,1,2532,1,4440,1,7752,250,7117,100);
Add(1,5365,1,0,0,12127,5,574,50,4076,1,7031,250,737,50);
Add(1,5572,1,0,0,627,10,1028,250,4017,1,919,250,6249,50);
Add(1,5556,1,0,0,746,100,7053,250,4312,1,7065,250,912,250);
Add(1,5856,1,0,0,7038,200,6394,200,6403,200,982,15,975,15);
Add(1,5857,1,0,0,7038,200,6394,200,6403,200,982,15,978,15);
Add(1,5858,1,0,0,7038,200,6394,200,6403,200,982,15,979,15);
Add(1,5579,1,0,0,2280,1,1001077,200,7222,200,7189,50,1019,100);
Add(1,5497,1,0,0,1030,5,1029,5,1133,1,518,50,985,10);
Add(1,18508,1,0,0,2221,1,969,4,7063,100,1060,50,925,20);
Add(1,5539,1,0,0,7267,400,4265,2,7172,400,7171,400,969,5);
Add(1,5214,1,0,0,1477,1,686,5,633,50,7054,100,953,100);
Add(1,18528,1,0,0,6020,100,520,50,638,1,5008,1,997,50);
Add(1,19242,1,0,0,7035,50,7047,50,7563,50,2233,1,7340,50);
Add(1,5360,1,0,0,2286,1,7511,100,7317,50,12813,20,990,50);
Add(1,470122,1,0,0,1029,50,25731,250);
Add(1,19263,1,0,0,916,50,975,2,5128,1,714,3,1043,50);
Add(1,19296,1,0,0,983,5,982,5,916,50,714,3,1716,1);
Add(1,5859,1,0,0,5122,1,7448,100,719,15,2610,1,714,5);
Add(1,5766,1,0,0,923,50,1021,50,7106,100,7107,100,2221,1);
Add(1,480174,1,0,0,25731,250,7566,30);
Add(1,400110,1,0,0,25731,250,7566,30);

sleep 10;

Add(1,470204,1,0,0,25731,250,1001033,30);
Add(1,5380,1,0,0,1023,150,624,10,300119,1,300147,1);
Add(1,19264,1,0,0,956,100,965,50,966,50,720,20,10003,1);
Add(1,19265,1,0,0,942,100,753,10,754,10,2213,1,945,50);
Add(1,5464,1,0,0,7166,100,2234,1,1020,50,12002,50,984,10);
Add(1,5671,1,0,0,2537,1,7798,100,7799,100,2536,1,2728,1);
Add(1,5904,1,0,0,2221,1,975,1,981,3,7038,50,7200,10);
Add(1,5906,1,0,0,7106,5,6032,20,6033,3,7200,10,982,3);
Add(1,5985,1,0,0,7063,50,6247,50,509,50,5089,1,7568,100);
Add(1,5573,1,0,0,947,100,1021,50,4019,2,4045,1,969,2);
Add(1,410013,1,0,0,7095,100,7093,100,4369,3,12735,20,4242,1);
Add(1,400111,1,0,0,25731,250,1000833,30);
Add(1,5135,1,0,0,2211,10,2614,5);
Add(1,5513,1,0,0,22687,50,23016,50);
Add(1,5515,1,0,0,22687,50,23016,50);
Add(1,5546,1,0,0,22687,50,23016,50);
Add(1,5550,1,0,0,22687,50,23016,50);
Add(1,5570,1,0,0,22687,50,23016,50);
Add(1,5582,1,0,0,22687,50,23016,50);
Add(1,5588,1,0,0,22687,50,23016,50);
Add(1,5598,1,0,0,22687,50,23016,50);
Add(1,5662,1,0,0,22687,50,23016,50);
Add(1,5676,1,0,0,22687,50,23016,50);
Add(1,5739,1,0,0,22687,50,23016,50);
Add(1,5744,1,0,0,22687,50,23016,50);
Add(1,18522,1,0,0,7441,50,949,50,2255,1,1039,50,7340,50);
Add(1,18572,1,0,0,7158,100,7159,100,7111,50,7157,20,7156,100);
Add(1,19177,1,0,0,12040,1,7163,50,924,50,7168,50,2235,1);
Add(1,19179,1,0,0,2221,1,740,20,949,100,705,20,622,25);
Add(1,19180,1,0,0,5022,1,1045,100,1625,1,2617,1,934,100);

sleep 10;

Add(1,5907,1,0,0,5172,1,982,3,978,1,7444,3,7038,50);
Add(1,19300,1,0,0,5118,1,983,5,975,1,714,3,5172,1);
Add(1,5902,1,0,0,2221,1,7136,50,2612,1,7188,50,7135,50);
Add(1,19308,1,0,0,5172,1,2254,1,2255,1,7444,3,10016,1);
Add(1,5469,1,0,0,6394,10,975,5,983,1,714,3,5172,1);
Add(1,5899,1,0,0,2244,1,983,5,982,1,7038,50,2627,1);
Add(1,5900,1,0,0,2221,1,714,3,982,3,978,3,916,50);
Add(1,18878,1,0,0,1020,100,983,5,7161,50,2227,1,1146,1);
Add(1,5420,1,0,0,994,50,1471,1,5090,1,7097,200,7122,200);
Add(1,5421,1,0,0,994,50,2286,1,7122,200,7098,200,7097,200);
Add(1,5658,1,0,0,12374,1,13303,1,7122,200);
Add(1,19268,1,0,0,994,100,7098,50,7122,50,7097,50,2344,1);
Add(1,5375,1,0,0,968,3,931,500,1124,1,756,20,985,5);
Add(1,5401,1,0,0,983,5,2276,1,7038,250,5042,1,7053,150);
Add(1,5036,1,0,0,2608,1,7069,500);
Add(1,5034,1,0,0,2233,1,746,20);
Add(1,5049,1,0,0,1099,1500);
Add(1,5052,1,0,0,2211,1,978,1,7003,300);
Add(1,5082,1,0,0,921,300);
Add(1,5091,1,0,0,10016,1,714,1,969,3);
Add(1,5080,1,0,0,10006,1,714,1,969,3);
Add(1,5081,1,0,0,2249,1,714,1,969,3);
Add(1,5040,1,0,0,7047,100);
Add(1,5024,1,0,0,529,10,530,5,539,20,999,10,538,15);
Add(1,5028,1,0,0,2279,1,7035,50,526,100);
Add(1,5026,1,0,0,1036,450,949,330,539,120,982,1);

sleep 10;

Add(1,2273,1,0,0,2275,1,998,50,733,1);
Add(1,5018,1,0,0,2247,1,916,300);
Add(1,2281,1,0,0,998,20,707,1);
Add(1,2280,1,0,0,1019,120);
Add(1,5031,1,0,0,5009,1,5028,1,747,1,999,25);
Add(1,5023,1,0,0,1059,150,907,100,978,1);
Add(1,5021,1,0,0,2233,1,969,1,999,20,949,80,938,800);
Add(1,5043,1,0,0,2281,1,1048,50);
Add(1,5022,1,0,0,7578,1,969,10,999,40,1003,50,984,2);
Add(1,5032,1,0,0,1059,250,2221,1,2227,1,7063,600);
Add(1,5027,1,0,0,2252,1,1036,400,7001,50,4052,1);
Add(1,5045,1,0,0,2252,1,1054,450,943,1200);
Add(1,1549,1,0,0,999,200,7325,30,1415,1);
Add(1,18813,1,0,0,50000,100,2276,1,25787,50,6750,20,7094,101,6820,50,25723,100,25669,50,25668,5,25271,50);

// --------------------------------------------------
	for(set .@i,1; .@i<=getarraysize(.Shops$); set .@i,.@i+1)
		npcshopdelitem "equipmentcrafter"+.@i,909;
	end;
}

// -------- Dummy data (duplicate as needed) --------
-	shop	equipmentcrafter1	-1,909:-1